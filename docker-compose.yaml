services:
  db:
    image: postgres:17
    env_file: .env
    environment:
      POSTGRES_SERVER: $POSTGRES_SERVER
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7.0
    command:
      - redis-server
    env_file: .env
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      - app-network

  django:
    build: .
    command: >
      sh -c "python django_app.py makemigrations &&
      python django_app.py migrate &&
      python /app/django_app.py runserver 0.0.0.0:8000"
    environment:
      DJANGO_SETTINGS_MODULE: Web.Web.settings
      BOT_TOKEN: "7433337561:AAH2FAOj2UEebd1zRUEzSKDYwUHHkC9qlJg"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - .:/app
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./Web/static:/app/Web/static
    depends_on:
      - django
    networks:
      - app-network

  bot:
    build: .
    command: python bot.py
    environment:
      DJANGO_SETTINGS_MODULE: Web.Web.settings
      BOT_TOKEN: "7433337561:AAH2FAOj2UEebd1zRUEzSKDYwUHHkC9qlJg"
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - .:/app
    networks:
      - app-network


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge